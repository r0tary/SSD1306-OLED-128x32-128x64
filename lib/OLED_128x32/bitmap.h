#ifndef BITMAP_H__
#define BITMAP_H__

//SDU logo bit map. 128x32 pixels. 16 bytes wide, 32 bytes tall 
static const char SDU_BitMap [] = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xfe, 0x07, 0xe0, 0x0f, 0xfe, 0x3f, 0xf1, 0xff, 0xfe, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf8, 0x01, 0xe0, 0x01, 0xfe, 0x3f, 0xf1, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf0, 0x01, 0xe0, 0x00, 0xfe, 0x3f, 0xf1, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe0, 0xe3, 0xe0, 0x00, 0x7e, 0x3f, 0xf1, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe1, 0xff, 0xe1, 0xf8, 0x3e, 0x3f, 0xf1, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe1, 0xff, 0xe1, 0xfc, 0x1e, 0x3f, 0xf1, 0xff, 0xf1, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe1, 0xff, 0xe1, 0xfe, 0x1e, 0x3f, 0xf1, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe0, 0x7f, 0xe1, 0xfe, 0x1e, 0x3f, 0xf1, 0xff, 0xf8, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf0, 0x1f, 0xe1, 0xff, 0x0e, 0x3f, 0xf1, 0xff, 0x87, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf8, 0x07, 0xe1, 0xff, 0x0e, 0x3f, 0xf1, 0xfc, 0x7b, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xfe, 0x03, 0xe1, 0xff, 0x0e, 0x3f, 0xf1, 0xf1, 0xfd, 0xf0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0x81, 0xe1, 0xff, 0x0e, 0x3f, 0xf1, 0xe7, 0xf0, 0x78, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xe0, 0xe1, 0xfe, 0x1e, 0x1f, 0xf1, 0xef, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xf0, 0xe1, 0xfe, 0x1e, 0x1f, 0xe1, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xf0, 0xe1, 0xfc, 0x1e, 0x1f, 0xe1, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf3, 0xf0, 0xe1, 0xf8, 0x3e, 0x0f, 0xc1, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe0, 0xc1, 0xe0, 0x00, 0x7f, 0x03, 0x03, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xe0, 0x01, 0xe0, 0x00, 0xff, 0x80, 0x07, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xf0, 0x03, 0xe0, 0x01, 0xff, 0xc0, 0x0f, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xfc, 0x0f, 0xe0, 0x1f, 0xff, 0xf0, 0x3f, 0xff, 0xf2, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

#endif